import enum
from pynput._util import AbstractListener as AbstractListener, prefix as prefix
from typing import Any

class Button(enum.Enum):
    unknown: int
    left: int
    middle: int
    right: int

class Controller:
    def __init__(self) -> None: ...
    @property
    def position(self): ...
    @position.setter
    def position(self, pos) -> None: ...
    def scroll(self, dx, dy) -> None: ...
    def press(self, button) -> None: ...
    def release(self, button) -> None: ...
    def move(self, dx, dy) -> None: ...
    def click(self, button, count: int = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type, value, traceback) -> None: ...

class Listener(AbstractListener):
    def __init__(self, on_move: Any | None = ..., on_click: Any | None = ..., on_scroll: Any | None = ..., suppress: bool = ..., **kwargs) -> None: ...
